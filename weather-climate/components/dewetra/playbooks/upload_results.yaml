- name: Upload results to Dewetra SFTP server
  hosts: all
  strategy: free
  become: true
  become_method: sudo
  tasks:
    - meta: end_play
      when: SFTP_SERVER_IP == ""
    - name: "Create directory for key"
      file:
        path: "{{ ansible_env.HOME }}/.ssh"
        state: directory
    - name: Add key content
      copy:
        content: "{{ KEY }}"
        dest: "{{ ansible_env.HOME }}/.ssh/id_rsa"
    - name: Change file ownership
      file:
        path: "{{ ansible_env.HOME }}/.ssh/id_rsa"
        mode: '0400'
    - name: Compute year, month, day, hours yyyymmddhh and init variables
      set_fact:
        startyear: "{{START_DATE[0:4]}}"
        startmonth: "{{START_DATE[4:6]}}"
        startDay: "{{START_DATE[6:8]}}"
        startHour: "{{START_DATE[8:10]}}"
        resultsRootDir: ""
    - name: Get WRF destination root directory for France
      set_fact:
        wrfRootDir: data/WRF_DA_FRA_LEXIS
      when: COMPUTATION_TYPE == "ADMS" or COMPUTATION_TYPE == "LIMAGRAIN"
    - name: Get WRF destination root directory for Italy
      set_fact:
        wrfRootDir: data/WRF_DA_ITA_LEXIS
      when: COMPUTATION_TYPE != "ADMS" and COMPUTATION_TYPE != "LIMAGRAIN"
    - name: Get post-processing results dir for Continuum
      set_fact:
        resultsRootDir: data/FLOOD_PROOF_OSSERVAZIONI_LEXIS
      when: COMPUTATION_TYPE == "CONTINUUM"
    - name: Get post-processing results dir for Continuum
      set_fact:
        resultsRootDir: data/RISICO_LEXIS
      when: COMPUTATION_TYPE == "RISICO"

    - name: "Renaming a file result produced by WRF with the name expected by dewetra"
      shell: "mv {{ WRF_RESULTS_DIR }}/lexis* {{ WRF_RESULTS_DIR }}/rg_wrf-{{ startyear }}{{ startmonth }}{{ startDay }}{{ startHour }}00_{{ startHour }}UTC.nc"

    - name: Create batch file to store WRF results
      blockinfile:
        path: "{{ ansible_env.HOME }}/lexis_store_wrf_results"
        create: yes
        block: |
          cd {{ wrfRootDir }}
          -mkdir {{ startyear }}
          cd {{ startyear }}
          -mkdir {{ startmonth }}
          cd {{ startmonth }}
          -mkdir {{ startDay }}
          cd {{ startDay }}
          -mkdir {{ startHour }}00
          cd {{ startHour }}00
          lcd {{ WRF_RESULTS_DIR }}
          put rg*
    - name: Set destination
      set_fact:
        destination: "{{ USER }}@{{ SFTP_SERVER_IP }}"
      when: USER != ""
    - name: Set destination with default user
      set_fact:
        destination: "{{ SFTP_SERVER_IP }}"
      when: USER == ""
    - name: Upload WRF results to SFTP server
      command: "sftp -oStrictHostKeyChecking=no -b {{ ansible_env.HOME }}/lexis_store_wrf_results -P {{ SFTP_SERVER_PORT }} {{ destination }}"

    - meta: end_play
      when: POSTPROCESSING_RESULTS_DIR == ""

    - name: Create batch file to store RISICO results
      blockinfile:
        path: "{{ ansible_env.HOME }}/lexis_store_risico_results"
        create: yes
        block: |
          cd {{ resultsRootDir }}
          -mkdir {{ startyear }}
          cd {{ startyear }}
          -mkdir {{ startmonth }}
          cd {{ startmonth }}
          -mkdir {{ startDay }}
          cd {{ startDay }}
          -mkdir {{ startHour }}00
          cd {{ startHour }}00
          lcd {{ POSTPROCESSING_RESULTS_DIR }}
          put *
      when: COMPUTATION_TYPE == "RISICO"
    - name: Upload risico results to SFTP server
      command: "sftp -oStrictHostKeyChecking=no -b {{ ansible_env.HOME }}/lexis_store_risico_results -P {{ SFTP_SERVER_PORT }} {{ destination }}"
      when: COMPUTATION_TYPE == "RISICO"

    - meta: end_play
      when: COMPUTATION_TYPE == "RISICO"

    - name: Create batch file to create Continuum directories
      blockinfile:
        path: "{{ ansible_env.HOME }}/lexis_create_continuum_dirs"
        create: yes
        block: |
          cd {{ resultsRootDir }}
          -mkdir {{ startyear }}
          cd {{ startyear }}
          -mkdir {{ startmonth }}
          cd {{ startmonth }}
          -mkdir {{ startDay }}
    - name: Create directories in SFTP server
      command: "sftp -oStrictHostKeyChecking=no -b {{ ansible_env.HOME }}/lexis_create_continuum_dirs -P {{ SFTP_SERVER_PORT }} {{ destination }}"

    - name: Get all regions
      find:
        path: "{{ POSTPROCESSING_RESULTS_DIR }}"
        file_type: directory
        recurse: no
      register: regions
    - name: Create batch file to strp region results
      blockinfile:
        path: "{{ ansible_env.HOME }}/lexis_store_continuum_{{ item | basename }}_results"
        create: yes
        block: |
          cd {{ resultsRootDir }}/{{ startyear }}/{{ startmonth }}/{{ startDay }}
          lcd {{ POSTPROCESSING_RESULTS_DIR }}/{{ item | basename }}/time_series
          put hydrograph*
      with_items: "{{ regions.files | map(attribute='path') | list }}"
    - name: Store results SFTP server
      command: "sftp -oStrictHostKeyChecking=no -b {{ ansible_env.HOME }}/lexis_store_continuum_{{ item | basename }}_results -P {{ SFTP_SERVER_PORT }} {{ destination }}"
      with_items: "{{ regions.files | map(attribute='path') | list }}"
