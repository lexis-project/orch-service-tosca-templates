tosca_definitions_version: alien_dsl_3_0_0

metadata:
  template_name: org.lexis.wp7.adms
  template_version: 0.1.2
  template_author: lexis

description: ADMS types

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - yorc-types:1.1.0
  - org.lexis.common.ddi-types:1.0.3
node_types:
  org.lexis.wp7.nodes.ADMSRun:
    derived_from: tosca.nodes.SoftwareComponent
    description: >
      Runs an ADMS simulation
    properties:
      adms_type:
        type: string
        description: type of ADMS simulation executed, urban or industrial
        required: true
      adms_start_date:
        type: string
        description: Start date of the simulation, format YYYYMMDDHH
        required: true
      dataset_title_ncl_result:
        type: string
        description: Title of the dataset containing NCL results
        required: true
      dataset_id_adms_urban_app:
        type: string
        description: ID of the dataset containing the ADMSUrban.exe and corresponding files. The DDI dataset has to contain single file called adms_urban.zip
        required: true
      dataset_id_adms_urban_static_data:
        type: string
        description: ID of the dataset containing the static data for ADMSUrban
        required: true
      dataset_id_adms_industrial_app:
        type: string
        description: ID of the dataset containing the ADMSIndustrial.exe and corresponding files. The DDI dataset has to contain single file called adms_industrial.zip
        required: true
      dataset_id_adms_industrial_static_data:
        type: string
        description: ID of the dataset containing the static data for ADMSIndustrial
        required: true
      ddi_project_short_name:
        type: string
        description: Short name of the DDI project where to store results
        required: true
    requirements:
      - ddi_access:
          capability: org.lexis.common.ddi.capabilities.DDIAccess
          relationship: org.lexis.common.ddi.relationships.DDIAccessProvider
          occurrences: [1, 1]
    attributes:
      access_token:
        type: string
        description: OpenID Connect access token
    interfaces:
      Standard:
        #create:
        #  implementation: playbooks/noop.yaml
        start:
          inputs:
            ADMS_TYPE: {get_property: [SELF, adms_type]}
            ADMS_START_DATE: {get_property: [SELF, adms_start_date]}
            ACCESS_TOKEN: {get_attribute: [SELF, access_token]}
            METEO_DATASET_NAME: {get_property: [SELF, dataset_title_ncl_result]}
            ADMS_URBAN_APP_DATASET: {get_property: [SELF, dataset_id_adms_urban_app]}
            ADMS_URBAN_STATIC_DATASET: {get_property: [SELF, dataset_id_adms_urban_static_data]}
            ADMS_INDUSTRIAL_APP_DATASET: {get_property: [SELF, dataset_id_adms_industrial_app]}
            ADMS_INDUSTRIAL_STATIC_DATASET: {get_property: [SELF, dataset_id_adms_industrial_static_data]}
            DATASET_URL: {get_attribute: [REQ_TARGET, ddi_access, dataset_url]}
            DDI_PROJECT_SHORT_NAME:  {get_property: [SELF, ddi_project_short_name]}
          implementation: playbooks/adms_run.yaml
  org.lexis.wp7.nodes.ADMSStore:
    derived_from: tosca.nodes.SoftwareComponent
    description: >
      Stores results of an ADMS run in DDI
    properties:
      adms_type:
        type: string
        description: type of ADMS simulation executed, urban or industrial
        required: true
      adms_start_date:
        type: string
        description: Start date of the simulation, format YYYYMMDDHH
        required: true
      dataset_title_adms_result:
        type: string
        description: Which will be the title of the dataset containing ADMS results
        required: true
      ddi_project_short_name:
        type: string
        description: Short name of the DDI project where to store results
        required: true
      adms_irods_server:
        type: string
        description: IRODS server where to upload results
        required: true
      adms_irods_zone:
        type: string
        description: IRODS zone where to upload results
        required: true
      adms_sftp_server_ip:
        type: string
        description: IP address of a SPTP server where to store results (no upload to sftp server if not defined)
        required: false
      adms_sftp_port:
        type: integer
        description: Port of the SFTP server
        default: 22
        required: false
      adms_sftp_industrial_dir:
        type: string
        description: SFTP destination directory for the industrial case
        required: false
        default: "/"
      adms_sftp_urban_dir:
        type: string
        description: IP address of a SPTP server where to store results (no upload to sftp server if not defined)
        required: false
        default: "/"
      adms_irods_broker_url:
        type: string
        description: IRODS broker URL
        required: false
        default: "https://irods-broker.msad.it4i.lexis.tech"
    requirements:
      - ddi_access:
          capability: org.lexis.common.ddi.capabilities.DDIAccess
          relationship: org.lexis.common.ddi.relationships.DDIAccessProvider
          occurrences: [1, 1]
    attributes:
      access_token:
        type: string
        description: OpenID Connect access token
      dataset_id_result: {get_operation_output: [SELF, Standard, start, DATASET_ID_RESULT]}
    interfaces:
      Standard:
        #create:
        #  implementation: playbooks/noop.yaml
        start:
          inputs:
            ADMS_TYPE: {get_property: [SELF, adms_type]}
            ADMS_START_DATE: {get_property: [SELF, adms_start_date]}
            ACCESS_TOKEN: {get_attribute: [SELF, access_token]}
            ADMS_RESULT_DATASET_NAME: {get_property: [SELF, dataset_title_adms_result]}
            ADMS_SFTP_SERVER_IP: {get_property: [SELF, adms_sftp_server_ip]}
            ADMS_SFTP_PORT: {get_property: [SELF, adms_sftp_port]}
            ADMS_SFTP_USER: { get_secret: ["/secret/wp7/adms/creds", "data=user"]}
            ADMS_SFTP_PASSWORD: { get_secret: ["/secret/wp7/adms/creds", "data=password"]}
            ADMS_SFTP_INDUSTRIAL_DIR: {get_property: [SELF, adms_sftp_industrial_dir]}
            ADMS_SFTP_URBAN_DIR: {get_property: [SELF, adms_sftp_urban_dir]}
            ADMS_IRODS_SERVER: {get_property: [SELF, adms_irods_server]}
            ADMS_IRODS_ZONE: {get_property: [SELF, adms_irods_zone]}
            ADMS_IRODS_BROKER_URL: {get_property: [SELF, adms_irods_broker_url]}
            ADMS_IRODS_BROKER_KEY: { get_secret: ["/secret/wp7/adms/it4ibroker", "data=key"]}
            DATASET_URL: {get_attribute: [REQ_TARGET, ddi_access, dataset_url]}
            DDI_PROJECT_SHORT_NAME:  {get_property: [SELF, ddi_project_short_name]}
          implementation: playbooks/adms_store.yaml
