tosca_definitions_version: alien_dsl_3_0_0

metadata:
  template_name: org.lexis.wp7.RisicoTemplate
  template_version: 0.1.0-SNAPSHOT
  template_author: lexis

description: RISICO template

imports:
  - yorc-types:1.1.0
  - yorc-openstack-types:3.1.0
  - tosca-normative-types:1.0.0-ALIEN20
  - docker-types:3.0.0
  - alien-base-types:3.0.0
  - org.lexis.common.heappe-types:1.0.6
  - org.lexis.common.ddi-types:1.0.1
  - org.lexis.common.dynamic-orchestration-types:1.0.1
  - org.ystia.docker.containers.docker.generic:3.0.0-SNAPSHOT
  - org.ystia.docker.ansible:3.0.0-SNAPSHOT
  - org.lexis.common.datatransfer:0.1.2-SNAPSHOT
  - org.lexis.wp7.wps:0.1.1-SNAPSHOT
  - org.lexis.wp7.dewetra:0.1.0

topology_template:
  inputs:
    token:
      type: string
      description: "OpenID Connect token"
      required: true
    project_id:
      type: string
      description: "LEXIS project identifier"
      required: true
    preprocessing_start_date:
      type: string
      description: Start date of the simulation, format YYYYMMDDHH (warmup data from the 2 previous days will be also downloaded)
      required: true
    preprocessing_docker_image_gfs:
      type: string
      description: Pre-processing container repository path
      default: "cimafoundation/wps-da.gfs:v2.0.3"
      required: false
    preprocessing_docker_image_observation_data:
      type: string
      description: Repository path of container downloading observation data
      default: "cimafoundation/lexis-download-docker:v1.2.1"
      required: false
    preprocessing_dataset_geographical_data_path:
      type: string
      description: Dataset containing geographical data
      default: project/proj2bdfd9ccf5a78c3ec68ee9e1d90d2c1c/055b25ea-ba60-11eb-a44e-0050568fc9b5/static_geog_data.tar.gz
      # default: "project/proj2bdfd9ccf5a78c3ec68ee9e1d90d2c1c/69c0f740-33f0-11eb-8f85-0050568fcecc"
      required: false
    preprocessing_decrypt_dataset_geographical_data:
      type: boolean
      description: Should the input dataset be decrypted
      default: false
      required: false
    preprocessing_uncompress_dataset_geographical_data:
      type: boolean
      description: Should the input dataset be uncompressed
      default: true
      required: false
    preprocessing_volumes:
      type: list
      entry_schema:
        type: string
      description: |
        List of volumes to mount within the pre-processing container.
        Use docker CLI-style syntax: /host:/container[:mode]
      default: ["/wps_data/gfs:/input", "/wps_data/output/inputs:/output", "/mnt/cloud_staging_area/risico:/geogrid"]
    preprocessing_observation_data_volumes:
      type: list
      entry_schema:
        type: string
      description: |
        List of volumes to mount within the post-processing container downloading observation data.
        Use docker CLI-style syntax: /host:/container[:mode]
      default: ["/wps_data/observations:/output"]
    postprocessing_dewetra_sftp_server_ip:
        type: string
        description: IP address of a Dewetra SPTP server where to store results (default, no sftp server upload)
        required: false
        default: ""
    postprocessing_image:
      type: string
      description: Post-processing container repository path
      default: "laurentg/risico:1.0.0"
      required: false
    postprocessing_ddi_project_path:
      type: string
      description: "Path where to transfer the post-processing results in DDI"
      default: "project/proj2bdfd9ccf5a78c3ec68ee9e1d90d2c1c"
      required: false
    postprocessing_encrypt_dataset_result:
      type: boolean
      description: Encrypt the result dataset
      default: false
      required: false
    postprocessing_compress_dataset_result:
      type: boolean
      description: Compress the result dataset
      default: true
      required: false
  node_templates:
    # Validation of the token provided in input
    # Exchanging this token to have an access and refresh tokens
    # for any component needing it in the workflow
    ValidateExchangeToken:
      type: org.lexis.common.dynamic.orchestration.nodes.ValidateAndExchangeToken
      properties:
        token: {get_input: token}
        project_id: { get_input: project_id }

    # Job gathering info on the input dataset:
    # - on which locations it is available
    # - size
    # - number of files
    # to take placement decisions on computing resources using this dataset
    InputDatasetInfoJob:
      type: org.lexis.common.ddi.nodes.GetDDIDatasetInfoJob
      properties:
        token: {get_input: token}
        dataset_path: {get_input: preprocessing_dataset_geographical_data_path}
    # Find the best cloud location depending on the input dataset and needed cloud resources
    FindCloudLocationJob:
      type: org.lexis.common.dynamic.orchestration.nodes.SetLocationsJob
      metadata:
        task: dynamic_orchestration
      properties:
        token: { get_input: token }
        project_id: { get_input: project_id }
      requirements:
        - InputDataset:
            type_requirement: input_dataset
            node: InputDatasetInfoJob
            capability: org.lexis.common.ddi.capabilities.DatasetInfo
            relationship: org.lexis.common.dynamic.orchestration.relationships.Dataset
        - CloudResourceVM:
            type_requirement: cloud_instance
            node: RisicoVM
            capability: tosca.capabilities.OperatingSystem
            relationship: org.lexis.common.dynamic.orchestration.relationships.CloudResource
    # Floating IP address network
    PublicNet:
      type: yorc.nodes.openstack.FloatingIP
    RisicoVM:
      type: tosca.nodes.Compute
      requirements:
        - networkPublicNetConnection:
            type_requirement: network
            node: PublicNet
            capability: tosca.capabilities.Connectivity
            relationship: tosca.relationships.Network
      capabilities:
        host:
          properties:
            num_cpus: 10
            disk_size: "150 GB"
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    # At the end of the workflow, the Cloud instance token should be refreshed
    # before attempting to uninstall the compute instance
    RefreshVMToken:
      type: org.lexis.common.dynamic.orchestration.nodes.RefreshTargetTokens
      requirements:
        - target:
            type_requirement: target
            node: RisicoVM
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn
    GetDDIAccess:
      type: org.lexis.common.ddi.nodes.DDIAccess
      requirements:
        - hostedOnComputeHost:
            type_requirement: os
            node: RisicoVM
            capability: tosca.capabilities.OperatingSystem
            relationship: org.lexis.common.ddi.relationships.SameSite
    DDIToCloudGEOGDatasetJob:
      type: org.lexis.common.ddi.nodes.DDIToCloudJob
      properties:
        token: { get_input: token }
        decrypt: {get_input: preprocessing_decrypt_dataset_geographical_data}
        uncompress: {get_input: preprocessing_uncompress_dataset_geographical_data}
        ddi_dataset_path: { get_input: preprocessing_dataset_geographical_data_path }
        cloud_staging_area_directory_path: "risico_preprocessing_geog"
        timestamp_cloud_staging_area_directory: true
      requirements:
        - sameSite:
            type_requirement: os
            node: RisicoVM
            capability: tosca.capabilities.OperatingSystem
            relationship: org.lexis.common.ddi.relationships.SameSite
    MountGEOGDataset:
      type: org.lexis.common.ddi.nodes.SSHFSMountStagingAreaDataset
      properties:
        token: { get_input: token }
        mount_point_directory: "/mnt/cloud_staging_area/risico"
      requirements:
        - ddi_access:
            type_requirement: ddi_access
            node: GetDDIAccess
            capability: org.lexis.common.ddi.capabilities.DDIAccess
            relationship: org.lexis.common.ddi.relationships.DDIAccessProvider
        - data_transfer:
            type_requirement: data_transfer
            node: DDIToCloudGEOGDatasetJob
            capability: org.lexis.common.ddi.capabilities.DataTransferCloud
            relationship: org.lexis.common.ddi.relationships.CloudAreaDatasetProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CreatePreProcessDirs:
      type: org.lexis.common.datatransfer.nodes.CreateDirectories
      properties:
        directories: ["/wps_data/gfs", "/wps_data/output/inputs", "/wps_data/observations", "/wps_data/output/observations"]
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    Docker:
      type: org.ystia.docker.ansible.nodes.Docker
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CreatePostProcessDirs:
      type: org.lexis.common.datatransfer.nodes.CreateDirectories
      properties:
        directories:
          - "/risico_data/wrf"
          - "/risico_data/output"
          - "/risico_data/results"
          - "/risico_data/observations"
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    WPS_GFS:
      type: org.ystia.docker.containers.docker.generic.nodes.GenericContainer
      metadata:
        task: preprocessing
      properties:
        auto_remove: false
        cleanup: false
        detach: false
        image: {get_input: preprocessing_docker_image_gfs}
        keep_volumes: true
        restart_policy: no
        cpu_share: 1.0
        shm_size: "64 GB"
        volumes: {get_input: preprocessing_volumes}
        docker_env_vars:  {concat: ["{\"WPS_START_DATE\": \"", get_input: preprocessing_start_date, "\", \"WPS_END_DATE\": \"", get_input: preprocessing_start_date, "\", \"WPS_MODE\": \"WARMUPDA\"}"]}
      requirements:
        - hostedOnContainerRuntimeDockerHost:
            type_requirement: host
            node: Docker
            capability: org.alien4cloud.extended.container.capabilities.ApplicationHost
            relationship: org.alien4cloud.extended.container.relationships.HostedOnContainerRuntime
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    GFSData_D_day:
      type: org.lexis.wp7.nodes.GFSData
      properties:
        start_date: {get_input: preprocessing_start_date}
        end_date: {get_input: preprocessing_start_date}
        past_day_number: 0
        with_data_assimilation: true
        left_longitude: "-19.0"
        right_longitude: "48.0"
        top_latitude: "64.0"
        bottom_latitude: "24.0"
        output_directory: "/wps_data/gfs"
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    GFSData_day_before:
      type: org.lexis.wp7.nodes.GFSData
      properties:
        start_date: {get_input: preprocessing_start_date}
        end_date: {get_input: preprocessing_start_date}
        past_day_number: 1
        with_data_assimilation: true
        left_longitude: "-19.0"
        right_longitude: "48.0"
        top_latitude: "64.0"
        bottom_latitude: "24.0"
        output_directory: "/wps_data/gfs"
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    GFSData_2_days_before:
      type: org.lexis.wp7.nodes.GFSData
      properties:
        start_date: {get_input: preprocessing_start_date}
        end_date: {get_input: preprocessing_start_date}
        past_day_number: 2
        with_data_assimilation: true
        left_longitude: "-19.0"
        right_longitude: "48.0"
        top_latitude: "64.0"
        bottom_latitude: "24.0"
        output_directory: "/wps_data/gfs"
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn

    # Download observation data needed by RISICO 
    ObservationsData:
      type: org.ystia.docker.containers.docker.generic.nodes.GenericContainer
      properties:
        auto_remove: false
        cleanup: false
        detach: false
        image: {get_input: preprocessing_docker_image_observation_data}
        keep_volumes: true
        restart_policy: no
        cpu_share: 1.0
        shm_size: "64 GB"
        volumes: {get_input: preprocessing_observation_data_volumes}
        docker_env_vars:  {concat: ["{\"START_DATE\": \"", get_input: preprocessing_start_date, "\", \"DOWNLOAD_TYPE\": \"RISICO\", \"WEBDROPS_USER\": \"", get_secret: ["/secret/wp7/webdrops/creds", "data=user"], "\", \"WEBDROPS_PWD\": \"", get_secret: ["/secret/wp7/webdrops/creds", "data=password"], "\"}"]}
      requirements:
        - hostedOnContainerRuntimeDockerHost:
            type_requirement: host
            node: Docker
            capability: org.alien4cloud.extended.container.capabilities.ApplicationHost
            relationship: org.alien4cloud.extended.container.relationships.HostedOnContainerRuntime
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    # Move results to match WRF inputs structure expectations
    MoveObservationData:
      type: org.lexis.common.datatransfer.nodes.MoveFile
      properties:
        source_file:  "/wps_data/observations/WRFDA/*"
        destination: "/wps_data/output/observations"
        as_user: "root"
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn

    # Get pre-processing results details (size, number of files)
    GetPreprocessDatasetInfo:
      type: org.lexis.common.ddi.nodes.GetComputeInstanceDatasetInfo
      properties:
        dataset_path: "/wps_data/output"
      requirements:
        - host:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    # Find the best HPC location depending on the input dataset and needed HPC resources
    FindHPCLocationsJob:
      type: org.lexis.common.dynamic.orchestration.nodes.SetLocationsJob
      metadata:
        task: dynamic_orchestration
      properties:
        token: { get_input: token }
        project_id: { get_input: project_id }
      requirements:
        - InputDataset:
            type_requirement: input_dataset
            node: GetPreprocessDatasetInfo
            capability: org.lexis.common.ddi.capabilities.DatasetInfo
            relationship: org.lexis.common.dynamic.orchestration.relationships.Dataset
        - HPCResourceWRFJob:
            type_requirement: heappe_job
            node: WRF
            capability: org.lexis.common.heappe.capabilities.HeappeJob
            relationship: org.lexis.common.dynamic.orchestration.relationships.HeappeJob
    WRF:
      type: org.lexis.common.heappe.nodes.Job
      metadata:
        task: computation
      properties:
        token: { get_input: token }
        JobSpecification:
          Name: WRFJob
          Project: "MyProject"
          ClusterId: 2
          Tasks:
            - Name: WRF Generic
              ClusterNodeTypeId: 7
              CommandTemplateId: 9
              WalltimeLimit: 86400
              MinCores: 144
              MaxCores: 144
              Priority: 4
              StandardOutputFile: "stdout"
              StandardErrorFile: "stderr"
              ProgressFile: "stdprog"
              LogFile: "stdlog"
    # Create a directory in staging area for WRF inputs
    CreateStagingAreaWRFInputDir:
      type: org.lexis.common.datatransfer.nodes.CreateStagingAreaDirectory
      properties:
        directory: "risico_wrf_inputs"
      requirements:
        - mountedCloudStagingArea:
            type_requirement: mounted_staging_area
            node: MountGEOGDataset
            capability: org.lexis.common.ddi.capabilities.MountedStagingAreaAccess
            relationship: org.lexis.common.datatransfer.relationships.MountedCloudStagingArea
        - hostedOnComputeHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    StageWRFInputs:
      type: org.lexis.common.datatransfer.nodes.CopyToStagingAreaDirectory
      properties:
        source_directory: "/wps_data/output/"
      requirements:
        - staging_area_directory:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaWRFInputDir
            capability: org.lexis.common.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.lexis.common.ddi.relationships.CloudAreaDirectoryProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    # Transfer these inputs to WRF
    CloudToHPCTaskJob:
      type: org.lexis.common.ddi.nodes.CloudToHPCJob
      properties:
        token: { get_input: token }
        task_name: "WRF Generic"
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaWRFInputDir
            capability: org.lexis.common.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.lexis.common.ddi.relationships.CloudAreaDirectoryProvider
        - job:
            type_requirement: job
            node: WRF
            capability: org.lexis.common.heappe.capabilities.HeappeJob
            relationship: org.lexis.common.heappe.relationships.SendInputsToJob
    # Transfer HPC job results to the cloud staging area
    HPCToCloudWRFJob:
      type: org.lexis.common.ddi.nodes.HPCToCloudJob
      properties:
        token: { get_input: token }
        task_name: "WRF Generic"
        source_subdirectory: "results"
        cloud_staging_area_directory_path: "risico_wrf_results"
        timestamp_cloud_staging_area_directory: true
      requirements:
        - sameSite:
            type_requirement: os
            node: RisicoVM
            capability: tosca.capabilities.OperatingSystem
            relationship: org.lexis.common.ddi.relationships.SameSite
        - job:
            type_requirement: job
            node: WRF
            capability: org.lexis.common.heappe.capabilities.HeappeJob
            relationship: org.lexis.common.ddi.relationships.SendJobOutputs
    MountWRFDataset:
      type: org.lexis.common.ddi.nodes.SSHFSMountStagingAreaDataset
      properties:
        token: { get_input: token }
        mount_point_directory: "/mnt/cloud_staging_area/wrf_results"
      requirements:
        - ddi_access:
            type_requirement: ddi_access
            node: GetDDIAccess
            capability: org.lexis.common.ddi.capabilities.DDIAccess
            relationship: org.lexis.common.ddi.relationships.DDIAccessProvider
        - data_transfer:
            type_requirement: data_transfer
            node: HPCToCloudWRFJob
            capability: org.lexis.common.ddi.capabilities.DataTransferCloud
            relationship: org.lexis.common.ddi.relationships.CloudAreaDatasetProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    # Move only the WRF auxhist results needed by post-processing
    MoveWRFAuxhistResults:
      type: org.lexis.common.datatransfer.nodes.MoveFile
      properties:
        source_file:  "/mnt/cloud_staging_area/wrf_results/*/aux/*"
        destination: "/risico_data/wrf/"
        as_user: "root"
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    # Move the WRF lexis result to be uploaded to dewetra
    MoveWRFLexisResult:
      type: org.lexis.common.datatransfer.nodes.MoveFile
      properties:
        source_file:  "/mnt/cloud_staging_area/wrf_results/*/dewetra/lexis*"
        destination: "/risico_data/results"
        as_user: "root"
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    # Transfer HEAppE WRF job results to DDI
    HPCToDDIJob:
      type: org.lexis.common.ddi.nodes.HPCToDDIJob
      metadata:
        task: preprocessing
      properties:
        token: { get_input: token }
        metadata: {concat: ["{\"creator\": [\"RISICO workflow\"], \"contributor\": [\"RISICO workflow\"], \"publisher\": [\"RISICO workflow\"], \"resourceType\": \"Dataset\", \"title\": \"RISICO Workflow WRF result - ", get_input: preprocessing_start_date, "\"}"]}
        encrypt: {get_input: postprocessing_encrypt_dataset_result}
        compress: {get_input: postprocessing_compress_dataset_result}
        ddi_path: { get_input: postprocessing_ddi_project_path }
        task_name: "WRF Generic"
        source_subdirectory: "results"
      requirements:
        - job:
            type_requirement: job
            node: WRF
            capability: org.lexis.common.heappe.capabilities.HeappeJob
            relationship: org.lexis.common.ddi.relationships.SendJobOutputs

    # Move observations data to match RISICO inputs structure expectations
    MoveObservationRISICOData:
      type: org.lexis.common.datatransfer.nodes.MoveFile
      properties:
        source_file:  "/wps_data/observations/*/SENSORS/*"
        destination: "/risico_data/observations"
        as_user: "root"
      requirements:
        - hostedOnVirtualMachineHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    RISICO:
      type: org.ystia.docker.containers.docker.generic.nodes.GenericContainer
      metadata:
        task: postprocessing
      properties:
        auto_remove: false
        cleanup: false
        detach: false
        image: {get_input: postprocessing_image}
        keep_volumes: true
        restart_policy: no
        cpu_share: 1.0
        volumes: ["/risico_data/:/home/risico/data"]
        docker_env_vars:  {concat: ["{\"RISICO_RUN_DATE\": \"", get_input: preprocessing_start_date, "00\"}"]}
      requirements:
        - hostedOnContainerRuntimeDockerHost:
            type_requirement: host
            node: Docker
            capability: org.alien4cloud.extended.container.capabilities.ApplicationHost
            relationship: org.alien4cloud.extended.container.relationships.HostedOnContainerRuntime
      capabilities:
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    CreateStagingAreaResultDir:
      type: org.lexis.common.datatransfer.nodes.CreateStagingAreaDirectory
      properties:
        directory: "risico_results"
      requirements:
        - mountedCloudStagingArea:
            type_requirement: mounted_staging_area
            node: MountGEOGDataset
            capability: org.lexis.common.ddi.capabilities.MountedStagingAreaAccess
            relationship: org.lexis.common.datatransfer.relationships.MountedCloudStagingArea
        - hostedOnComputeHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    StageRISICOResults:
      type: org.lexis.common.datatransfer.nodes.CopyToStagingAreaDirectory
      properties:
        source_directory: "/risico_data/output"
      requirements:
        - staging_area_directory:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaResultDir
            capability: org.lexis.common.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.lexis.common.ddi.relationships.CloudAreaDirectoryProvider
        - hostedOnComputeHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    CloudToDDIJob:
      type: org.lexis.common.ddi.nodes.CloudToDDIJob
      properties:
        metadata: {concat: ["{\"creator\": [\"RISICO workflow\"], \"contributor\": [\"RISICO workflow\"], \"publisher\": [\"RISICO workflow\"], \"resourceType\": \"Dataset\", \"title\": \"RISICO Workflow result - ", get_input: preprocessing_start_date, "\"}"]}
        token: { get_input: token }
        encrypt: {get_input: postprocessing_encrypt_dataset_result}
        compress: {get_input: postprocessing_compress_dataset_result}
        ddi_path: { get_input: postprocessing_ddi_project_path }
      requirements:
        - cloud_area_directory_provider:
            type_requirement: cloud_area_directory_provider
            node: CreateStagingAreaResultDir
            capability: org.lexis.common.ddi.capabilities.CloudAreaDirectoryProvider
            relationship: org.lexis.common.ddi.relationships.CloudAreaDirectoryProvider
    DewetraUpload:
      type: org.lexis.wp7.nodes.DewetraUpload
      properties:
        start_date: { get_input: preprocessing_start_date }
        computation_type: RISICO
        wrf_results_dir: "/risico_data/results"
        postprocessing_results_dir: "/risico_data/output"
        sftp_server_ip: { get_input: postprocessing_dewetra_sftp_server_ip }
      requirements:
        - hostedOnComputeHost:
            type_requirement: host
            node: RisicoVM
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    DeleteCloudWRFDataJob:
      type: org.lexis.common.ddi.nodes.DeleteCloudDataJob
      properties:
        token: { get_input: token }
      requirements:
        - cloud_area_dataset_provider:
            type_requirement: cloud_area_dataset_provider
            node: HPCToCloudWRFJob
            capability: org.lexis.common.ddi.capabilities.DataTransferCloud
            relationship: org.lexis.common.ddi.relationships.CloudAreaDatasetProvider
    DeleteCloudGEOGDataJob:
      type: org.lexis.common.ddi.nodes.DeleteCloudDataJob
      properties:
        token: { get_input: token }
      requirements:
        - cloud_area_dataset_provider:
            type_requirement: cloud_area_dataset_provider
            node: DDIToCloudGEOGDatasetJob
            capability: org.lexis.common.ddi.capabilities.DataTransferCloud
            relationship: org.lexis.common.ddi.relationships.CloudAreaDatasetProvider
  outputs:
    computation_dataset_wrf_result_path:
      description: DDI path to RISICO WRF results
      value: { get_attribute: [ HPCToDDIJob, destination_path ] }
    postprocessing_ddi_project_path:
      description: DDI path to RISICO post-processing results
      value: { get_attribute: [ CloudToDDIJob, destination_path ] }
  workflows:
    # At deployment time, validating the input token and exchanging it
    # to get an access/refresh token for the orchestrator
    install:
      steps:
        ValidateExchangeToken_start:
          target: ValidateExchangeToken
          activities:
            - call_operation: Standard.start
          on_success:
            - ValidateExchangeToken_started
        ValidateExchangeToken_started:
          target: ValidateExchangeToken
          activities:
            - set_state: started
    uninstall:
      steps:
        DeleteCloudGEOGDataJob_create:
          target: DeleteCloudGEOGDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudGEOGDataJob_submit
        DeleteCloudGEOGDataJob_submit:
          target: DeleteCloudGEOGDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
           - DeleteCloudWRFDataJob_create
        DeleteCloudWRFDataJob_create:
          target: DeleteCloudWRFDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudWRFDataJob_submit
        DeleteCloudWRFDataJob_submit:
          target: DeleteCloudWRFDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - WRF_delete
        WRF_delete:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.delete
          on_success:
            - RefreshVMToken_start
        RefreshVMToken_start:
          target: RefreshVMToken
          activities:
            - call_operation: Standard.start
          on_success:
            - RefreshVMToken_started
        RefreshVMToken_started:
          target: RefreshVMToken
          activities:
            - set_state: started
          on_success:
            - Compute_uninstall
        Compute_uninstall:
          target: RisicoVM
          activities:
            - delegate: uninstall
          on_success:
            - Network_uninstall
        Network_uninstall:
          target: PublicNet
          activities:
            - delegate: uninstall
    Run:
      steps:
        # Submit DDI job to get info on dataset (DDI location where it is available, size...)
        InputDatasetInfoJob_submit:
          target: InputDatasetInfoJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - InputDatasetInfoJob_run
        InputDatasetInfoJob_run:
          target: InputDatasetInfoJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - InputDatasetInfoJob_executed
        InputDatasetInfoJob_executed:
          target: InputDatasetInfoJob
          activities:
            - set_state: executed
          on_success:
            - FindCloudLocationJob_submit
        # Submit the computation to find the best location from these inputs
        FindCloudLocationJob_submit:
          target: FindCloudLocationJob
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - FindCloudLocationJob_run
        FindCloudLocationJob_run:
          target: FindCloudLocationJob
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - FindCloudLocationJob_executed
        FindCloudLocationJob_executed:
          target: FindCloudLocationJob
          activities:
            - set_state: executed
          on_success:
            - DDIToCloudGEOGDatasetJob_create
            - Network_install
        # Get a floating IP address for the Cloud Compute instance
        Network_install:
          target: PublicNet
          activities:
            - delegate: install
          on_success:
            - Compute_install
        Compute_install:
          target: RisicoVM
          activities:
            - delegate: install
          on_success:
            - GetDDIAccess_start
            - CreatePreProcessDirs_start
            - Docker_create
        GetDDIAccess_start:
          target: GetDDIAccess
          activities:
            - call_operation: Standard.start
          on_success:
            - GetDDIAccess_started
        GetDDIAccess_started:
          target: GetDDIAccess
          activities:
            - set_state: started
          on_success:
            - MountGEOGDataset_create
        DDIToCloudGEOGDatasetJob_create:
          target: DDIToCloudGEOGDatasetJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DDIToCloudGEOGDatasetJob_submit
        DDIToCloudGEOGDatasetJob_submit:
          target: DDIToCloudGEOGDatasetJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DDIToCloudGEOGDatasetJob_submitted
        DDIToCloudGEOGDatasetJob_submitted:
          target: DDIToCloudGEOGDatasetJob
          activities:
            - set_state: submitted
          on_success:
            - DDIToCloudGEOGDatasetJob_run
        DDIToCloudGEOGDatasetJob_run:
          target: DDIToCloudGEOGDatasetJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DDIToCloudGEOGDatasetJob_executed
        DDIToCloudGEOGDatasetJob_executed:
          target: DDIToCloudGEOGDatasetJob
          activities:
            - set_state: executed
          on_success:
            - MountGEOGDataset_create
        MountGEOGDataset_create:
          target: MountGEOGDataset
          activities:
            - call_operation: Standard.create
          on_success:
            - MountGEOGDataset_created
        MountGEOGDataset_created:
          target: MountGEOGDataset
          activities:
            - set_state: created
          on_success:
            - MountGEOGDataset_refresh_token
        MountGEOGDataset_refresh_token:
          target: MountGEOGDataset
          activities:
            - call_operation: custom.refresh_token
          on_success:
            - MountGEOGDataset_start
        MountGEOGDataset_start:
          target: MountGEOGDataset
          activities:
            - call_operation: Standard.start
          on_success:
            - MountGEOGDataset_started
        MountGEOGDataset_started:
          target: MountGEOGDataset
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_start
        CreatePreProcessDirs_start:
          target: CreatePreProcessDirs
          activities:
            - call_operation: Standard.start
          on_success:
            - CreatePreProcessDirs_started
        CreatePreProcessDirs_started:
          target: CreatePreProcessDirs
          activities:
            - set_state: started
          on_success:
            - GFSData_D_day_start
            - GFSData_day_before_start
            - GFSData_2_days_before_start
        GFSData_D_day_start:
          target: GFSData_D_day
          activities:
            - call_operation: Standard.start
          on_success:
            - GFSData_D_day_started
        GFSData_D_day_started:
          target: GFSData_D_day
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_start
        GFSData_day_before_start:
          target: GFSData_day_before
          activities:
            - call_operation: Standard.start
          on_success:
            - GFSData_day_before_started
        GFSData_day_before_started:
          target: GFSData_day_before
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_start
        GFSData_2_days_before_start:
          target: GFSData_2_days_before
          activities:
            - call_operation: Standard.start
          on_success:
            - GFSData_2_days_before_started
        GFSData_2_days_before_started:
          target: GFSData_2_days_before
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_start
        Docker_create:
          target: Docker
          activities:
            - call_operation: Standard.create
          on_success:
            - Docker_configure
        Docker_configure:
          target: Docker
          activities:
            - call_operation: Standard.configure
          on_success:
            - Docker_start
        Docker_start:
          target: Docker
          activities:
            - call_operation: Standard.start
          on_success:
            - Docker_started
        Docker_started:
          target: Docker
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_create
        WPS_GFS_create:
          target: WPS_GFS
          activities:
            - call_operation: Standard.create
          on_success:
            - WPS_GFS_start
            - ObservationsData_create
        WPS_GFS_start:
          target: WPS_GFS
          activities:
            - call_operation: Standard.start
          on_success:
            - WPS_GFS_started
        WPS_GFS_started:
          target: WPS_GFS
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_delete
        WPS_GFS_delete:
          target: WPS_GFS
          activities:
            - call_operation: Standard.delete
          on_success:
            - WPS_GFS_deleted
        WPS_GFS_deleted:
          target: WPS_GFS
          activities:
            - set_state: deleted
          on_success:
            - GetPreprocessDatasetInfo_create
        ObservationsData_create:
          target: ObservationsData
          activities:
            - call_operation: Standard.create
          on_success:
            - ObservationsData_start
        ObservationsData_start:
          target: ObservationsData
          activities:
            - call_operation: Standard.start
          on_success:
            - ObservationsData_started
        ObservationsData_started:
          target: ObservationsData
          activities:
            - set_state: started
          on_success:
            - ObservationsData_delete
        ObservationsData_delete:
          target: ObservationsData
          activities:
            - call_operation: Standard.delete
          on_success:
            - ObservationsData_deleted
        ObservationsData_deleted:
          target: ObservationsData
          activities:
            - set_state: deleted
          on_success:
            - MoveObservationData_start
        MoveObservationData_start:
          target: MoveObservationData
          activities:
            - call_operation: Standard.start
          on_success:
            - MoveObservationData_started
        MoveObservationData_started:
          target: MoveObservationData
          activities:
            - set_state: started
          on_success:
            - GetPreprocessDatasetInfo_create
        GetPreprocessDatasetInfo_create:
          target: GetPreprocessDatasetInfo
          activities:
            - call_operation: Standard.create
          on_success:
            - GetPreprocessDatasetInfo_start
        GetPreprocessDatasetInfo_start:
          target: GetPreprocessDatasetInfo
          activities:
            - call_operation: Standard.start
          on_success:
            - GetPreprocessDatasetInfo_started
        GetPreprocessDatasetInfo_started:
          target: GetPreprocessDatasetInfo
          activities:
            - set_state: started
          on_success:
            - FindHPCLocationsJob_submit
        FindHPCLocationsJob_submit:
          target: FindHPCLocationsJob
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - FindHPCLocationsJob_run
        FindHPCLocationsJob_run:
          target: FindHPCLocationsJob
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - FindHPCLocationsJob_executed
        FindHPCLocationsJob_executed:
          target: FindHPCLocationsJob
          activities:
            - set_state: executed
          on_success:
            - WRF_create
        WRF_create:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - WRF_enable_file_transfer
        WRF_enable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.enable_file_transfer
          on_success:
            - CreateStagingAreaWRFInputDir_start
        # Create a directory in cloud staging area and copy HPC inputs there
        CreateStagingAreaWRFInputDir_start:
          target: CreateStagingAreaWRFInputDir
          activities:
            - call_operation: Standard.start
          on_success:
            - CreateStagingAreaWRFInputDir_started
        CreateStagingAreaWRFInputDir_started:
          target: CreateStagingAreaWRFInputDir
          activities:
            - set_state: started
          on_success:
            - StageWRFInputs_start
        # Stage HPC inputs to cloud staging area
        StageWRFInputs_start:
          target: StageWRFInputs
          activities:
            - call_operation: Standard.start
          on_success:
            - StageWRFInputs_started
        StageWRFInputs_started:
          target: StageWRFInputs
          activities:
            - set_state: started
          on_success:
            - CloudToHPCTaskJob_create
        # Transfer HPC inputs from Cloud staging area to HPC
        CloudToHPCTaskJob_create:
          target: CloudToHPCTaskJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - CloudToHPCTaskJob_submit
        CloudToHPCTaskJob_submit:
          target: CloudToHPCTaskJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - CloudToHPCTaskJob_submitted
        CloudToHPCTaskJob_submitted:
          target: CloudToHPCTaskJob
          activities:
            - set_state: submitted
          on_success:
            - CloudToHPCTaskJob_run
        CloudToHPCTaskJob_run:
          target: CloudToHPCTaskJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - CloudToHPCTaskJob_executed
        CloudToHPCTaskJob_executed:
          target: CloudToHPCTaskJob
          activities:
            - set_state: executed
          on_success:
            - WRF_submit
        WRF_submit:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - WRF_submitted
        WRF_submitted:
          target: WRF
          activities:
            - set_state: submitted
          on_success:
            - WRF_run
        WRF_run:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - WRF_executed
        WRF_executed:
          target: WRF
          activities:
            - set_state: executed
          on_success:
            - CreatePostProcessDirs_start
        CreatePostProcessDirs_start:
          target: CreatePostProcessDirs
          activities:
            - call_operation: Standard.start
          on_success:
            - CreatePostProcessDirs_started
        CreatePostProcessDirs_started:
          target: CreatePostProcessDirs
          activities:
            - set_state: started
          on_success:
            - HPCToCloudWRFJob_create
            - MoveObservationRISICOData_start
        MoveObservationRISICOData_start:
          target: MoveObservationRISICOData
          activities:
            - call_operation: Standard.start
          on_success:
            - MoveObservationRISICOData_started
        MoveObservationRISICOData_started:
          target: MoveObservationRISICOData
          activities:
            - set_state: started
          on_success:
            - RISICO_create
        # Transfer HPC results from HPC to Cloud staging area
        HPCToCloudWRFJob_create:
          target: HPCToCloudWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - HPCToCloudWRFJob_submit
        HPCToCloudWRFJob_submit:
          target: HPCToCloudWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - HPCToCloudWRFJob_submitted
        HPCToCloudWRFJob_submitted:
          target: HPCToCloudWRFJob
          activities:
            - set_state: submitted
          on_success:
            - HPCToCloudWRFJob_run
        HPCToCloudWRFJob_run:
          target: HPCToCloudWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - HPCToCloudWRFJob_executed
        HPCToCloudWRFJob_executed:
          target: HPCToCloudWRFJob
          activities:
            - set_state: executed
          on_success:
            - MountWRFDataset_refresh_token
        MountWRFDataset_refresh_token:
          target: MountWRFDataset
          activities:
            - call_operation: custom.refresh_token
          on_success:
            - MountWRFDataset_start
        MountWRFDataset_start:
          target: MountWRFDataset
          activities:
            - call_operation: Standard.start
          on_success:
            - MountWRFDataset_started
        MountWRFDataset_started:
          target: MountWRFDataset
          activities:
            - set_state: started
          on_success:
            - MoveWRFAuxhistResults_start
            - HPCToDDIJob_create
        MoveWRFAuxhistResults_start:
          target: MoveWRFAuxhistResults
          activities:
            - call_operation: Standard.start
          on_success:
            - MoveWRFAuxhistResults_started
        MoveWRFAuxhistResults_started:
          target: MoveWRFAuxhistResults
          activities:
            - set_state: started
          on_success:
            - MoveWRFLexisResult_start
        MoveWRFLexisResult_start:
          target: MoveWRFLexisResult
          activities:
            - call_operation: Standard.start
          on_success:
            - MoveWRFLexisResult_started
        MoveWRFLexisResult_started:
          target: MoveWRFLexisResult
          activities:
            - set_state: started
          on_success:
            - RISICO_create
        # Transfer HPC job results to DDI
        HPCToDDIJob_create:
          target: HPCToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - HPCToDDIJob_submit
        HPCToDDIJob_submit:
          target: HPCToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - HPCToDDIJob_submitted
        HPCToDDIJob_submitted:
          target: HPCToDDIJob
          activities:
            - set_state: submitted
          on_success:
            - HPCToDDIJob_run
        HPCToDDIJob_run:
          target: HPCToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - HPCToDDIJob_executed
        HPCToDDIJob_executed:
          target: HPCToDDIJob
          activities:
            - set_state: executed
          on_success:
            - CloudToDDIJob_create
        RISICO_create:
          target: RISICO
          activities:
            - call_operation: Standard.create
          on_success:
            - RISICO_start
        RISICO_start:
          target: RISICO
          activities:
            - call_operation: Standard.start
          on_success:
            - RISICO_started
        RISICO_started:
          target: RISICO
          activities:
            - set_state: started
          on_success:
            - CreateStagingAreaResultDir_start
        CreateStagingAreaResultDir_start:
          target: CreateStagingAreaResultDir
          activities:
            - call_operation: Standard.start
          on_success:
            - CreateStagingAreaResultDir_started
        CreateStagingAreaResultDir_started:
          target: CreateStagingAreaResultDir
          activities:
            - set_state: started
          on_success:
            - StageRISICOResults_start
        StageRISICOResults_start:
          target: StageRISICOResults
          activities:
            - call_operation: Standard.start
          on_success:
            - StageRISICOResults_started
        StageRISICOResults_started:
          target: StageRISICOResults
          activities:
            - set_state: started
          on_success:
            - CloudToDDIJob_create
        CloudToDDIJob_create:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - CloudToDDIJob_submit
        CloudToDDIJob_submit:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - CloudToDDIJob_submitted
        CloudToDDIJob_submitted:
          target: CloudToDDIJob
          activities:
            - set_state: submitted
          on_success:
            - CloudToDDIJob_run
        CloudToDDIJob_run:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - CloudToDDIJob_executed
        CloudToDDIJob_executed:
          target: CloudToDDIJob
          activities:
            - set_state: executed
          on_success:
            - DewetraUpload_start
        DewetraUpload_start:
          target: DewetraUpload
          activities:
            - call_operation: Standard.start
          on_success:
            - DewetraUpload_started
        DewetraUpload_started:
          target: DewetraUpload
          activities:
            - set_state: started
          on_success:
            - MountGEOGDataset_refresh_token_for_stop
        MountGEOGDataset_refresh_token_for_stop:
          target: MountGEOGDataset
          activities:
            - call_operation: custom.refresh_token
          on_success:
            - MountGEOGDataset_stop
        MountGEOGDataset_stop:
          target: MountGEOGDataset
          activities:
            - call_operation: Standard.stop
          on_success:
            - MountGEOGDataset_stopped
        MountGEOGDataset_stopped:
          target: MountGEOGDataset
          activities:
            - set_state: stopped
          on_success:
            - MountWRFDataset_refresh_token_for_stop
        MountWRFDataset_refresh_token_for_stop:
          target: MountWRFDataset
          activities:
            - call_operation: custom.refresh_token
          on_success:
            - MountWRFDataset_stop
        MountWRFDataset_stop:
          target: MountWRFDataset
          activities:
            - call_operation: Standard.stop
          on_success:
            - MountWRFDataset_stopped
        MountWRFDataset_stopped:
          target: MountWRFDataset
          activities:
            - set_state: stopped
          on_success:
            - DeleteCloudGEOGDataJob_create
        DeleteCloudGEOGDataJob_create:
          target: DeleteCloudGEOGDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudGEOGDataJob_created
        DeleteCloudGEOGDataJob_created:
          target: DeleteCloudGEOGDataJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudGEOGDataJob_submit
        DeleteCloudGEOGDataJob_submit:
          target: DeleteCloudGEOGDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudGEOGDataJob_submitted
        DeleteCloudGEOGDataJob_submitted:
          target: DeleteCloudGEOGDataJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudGEOGDataJob_run
        DeleteCloudGEOGDataJob_run:
          target: DeleteCloudGEOGDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudGEOGDataJob_executed
        DeleteCloudGEOGDataJob_executed:
          target: DeleteCloudGEOGDataJob
          activities:
            - set_state: executed
          on_success:
            - DeleteCloudWRFDataJob_create
        DeleteCloudWRFDataJob_create:
          target: DeleteCloudWRFDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudWRFDataJob_created
        DeleteCloudWRFDataJob_created:
          target: DeleteCloudWRFDataJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudWRFDataJob_submit
        DeleteCloudWRFDataJob_submit:
          target: DeleteCloudWRFDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudWRFDataJob_submitted
        DeleteCloudWRFDataJob_submitted:
          target: DeleteCloudWRFDataJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudWRFDataJob_run
        DeleteCloudWRFDataJob_run:
          target: DeleteCloudWRFDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudWRFDataJob_executed
        DeleteCloudWRFDataJob_executed:
          target: DeleteCloudWRFDataJob
          activities:
            - set_state: executed
          on_success:
            - WRF_disable_file_transfer
        WRF_disable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.disable_file_transfer
          on_success:
            - WRF_delete
        WRF_delete:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.delete
          on_success:
            - WRF_deleted
        WRF_deleted:
          target: WRF
          activities:
            - set_state: deleted
          on_success:
            - RefreshVMToken_start
        RefreshVMToken_start:
          target: RefreshVMToken
          activities:
            - call_operation: Standard.start
          on_success:
            - RefreshVMToken_started
        RefreshVMToken_started:
          target: RefreshVMToken
          activities:
            - set_state: started
          on_success:
            - Compute_uninstall
        Compute_uninstall:
          target: RisicoVM
          activities:
            - delegate: uninstall
          on_success:
            - Network_uninstall
        Network_uninstall:
          target: PublicNet
          activities:
            - delegate: uninstall
    testPostJobCreation:
      steps:
        WRF_enable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.enable_file_transfer
          on_success:
            - CreateStagingAreaWRFInputDir_start
        # Create a directory in cloud staging area and copy HPC inputs there
        CreateStagingAreaWRFInputDir_start:
          target: CreateStagingAreaWRFInputDir
          activities:
            - call_operation: Standard.start
          on_success:
            - CreateStagingAreaWRFInputDir_started
        CreateStagingAreaWRFInputDir_started:
          target: CreateStagingAreaWRFInputDir
          activities:
            - set_state: started
          on_success:
            - StageWRFInputs_start
        # Stage HPC inputs to cloud staging area
        StageWRFInputs_start:
          target: StageWRFInputs
          activities:
            - call_operation: Standard.start
          on_success:
            - StageWRFInputs_started
        StageWRFInputs_started:
          target: StageWRFInputs
          activities:
            - set_state: started
          on_success:
            - CloudToHPCTaskJob_create
        # Transfer HPC inputs from Cloud staging area to HPC
        CloudToHPCTaskJob_create:
          target: CloudToHPCTaskJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - CloudToHPCTaskJob_submit
        CloudToHPCTaskJob_submit:
          target: CloudToHPCTaskJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - CloudToHPCTaskJob_submitted
        CloudToHPCTaskJob_submitted:
          target: CloudToHPCTaskJob
          activities:
            - set_state: submitted
          on_success:
            - CloudToHPCTaskJob_run
        CloudToHPCTaskJob_run:
          target: CloudToHPCTaskJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - CloudToHPCTaskJob_executed
        CloudToHPCTaskJob_executed:
          target: CloudToHPCTaskJob
          activities:
            - set_state: executed
          on_success:
            - WRF_submit
        WRF_submit:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - WRF_submitted
        WRF_submitted:
          target: WRF
          activities:
            - set_state: submitted
          on_success:
            - WRF_run
        WRF_run:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - WRF_executed
        WRF_executed:
          target: WRF
          activities:
            - set_state: executed
    testSubmit:
      steps:
        WRF_submit:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - WRF_submitted
        WRF_submitted:
          target: WRF
          activities:
            - set_state: submitted
          on_success:
            - WRF_run
        WRF_run:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - WRF_executed
        WRF_executed:
          target: WRF
          activities:
            - set_state: executed
    testPostProc:
      steps:
        CreatePostProcessDirs_start:
          target: CreatePostProcessDirs
          activities:
            - call_operation: Standard.start
          on_success:
            - CreatePostProcessDirs_started
        CreatePostProcessDirs_started:
          target: CreatePostProcessDirs
          activities:
            - set_state: started
          on_success:
            - HPCToCloudWRFJob_create
            - MoveObservationRISICOData_start
        MoveObservationRISICOData_start:
          target: MoveObservationRISICOData
          activities:
            - call_operation: Standard.start
          on_success:
            - MoveObservationRISICOData_started
        MoveObservationRISICOData_started:
          target: MoveObservationRISICOData
          activities:
            - set_state: started
          on_success:
            - RISICO_create
        # Transfer HPC results from HPC to Cloud staging area
        HPCToCloudWRFJob_create:
          target: HPCToCloudWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - HPCToCloudWRFJob_submit
        HPCToCloudWRFJob_submit:
          target: HPCToCloudWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - HPCToCloudWRFJob_submitted
        HPCToCloudWRFJob_submitted:
          target: HPCToCloudWRFJob
          activities:
            - set_state: submitted
          on_success:
            - HPCToCloudWRFJob_run
        HPCToCloudWRFJob_run:
          target: HPCToCloudWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - HPCToCloudWRFJob_executed
        HPCToCloudWRFJob_executed:
          target: HPCToCloudWRFJob
          activities:
            - set_state: executed
          on_success:
            - MountWRFDataset_refresh_token
        MountWRFDataset_refresh_token:
          target: MountWRFDataset
          activities:
            - call_operation: custom.refresh_token
          on_success:
            - MountWRFDataset_start
        MountWRFDataset_start:
          target: MountWRFDataset
          activities:
            - call_operation: Standard.start
          on_success:
            - MountWRFDataset_started
        MountWRFDataset_started:
          target: MountWRFDataset
          activities:
            - set_state: started
          on_success:
            - MoveWRFAuxhistResults_start
            - HPCToDDIJob_create
        MoveWRFAuxhistResults_start:
          target: MoveWRFAuxhistResults
          activities:
            - call_operation: Standard.start
          on_success:
            - MoveWRFAuxhistResults_started
        MoveWRFAuxhistResults_started:
          target: MoveWRFAuxhistResults
          activities:
            - set_state: started
          on_success:
            - MoveWRFLexisResult_start
        MoveWRFLexisResult_start:
          target: MoveWRFLexisResult
          activities:
            - call_operation: Standard.start
          on_success:
            - MoveWRFLexisResult_started
        MoveWRFLexisResult_started:
          target: MoveWRFLexisResult
          activities:
            - set_state: started
          on_success:
            - RISICO_create
        # Transfer HPC job results to DDI
        HPCToDDIJob_create:
          target: HPCToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - HPCToDDIJob_submit
        HPCToDDIJob_submit:
          target: HPCToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - HPCToDDIJob_submitted
        HPCToDDIJob_submitted:
          target: HPCToDDIJob
          activities:
            - set_state: submitted
          on_success:
            - HPCToDDIJob_run
        HPCToDDIJob_run:
          target: HPCToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - HPCToDDIJob_executed
        HPCToDDIJob_executed:
          target: HPCToDDIJob
          activities:
            - set_state: executed
          on_success:
            - CloudToDDIJob_create
        RISICO_create:
          target: RISICO
          activities:
            - call_operation: Standard.create
          on_success:
            - RISICO_start
        RISICO_start:
          target: RISICO
          activities:
            - call_operation: Standard.start
          on_success:
            - RISICO_started
        RISICO_started:
          target: RISICO
          activities:
            - set_state: started
          on_success:
            - CreateStagingAreaResultDir_start
        CreateStagingAreaResultDir_start:
          target: CreateStagingAreaResultDir
          activities:
            - call_operation: Standard.start
          on_success:
            - CreateStagingAreaResultDir_started
        CreateStagingAreaResultDir_started:
          target: CreateStagingAreaResultDir
          activities:
            - set_state: started
          on_success:
            - StageRISICOResults_start
        StageRISICOResults_start:
          target: StageRISICOResults
          activities:
            - call_operation: Standard.start
          on_success:
            - StageRISICOResults_started
        StageRISICOResults_started:
          target: StageRISICOResults
          activities:
            - set_state: started
          on_success:
            - CloudToDDIJob_create
        CloudToDDIJob_create:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - CloudToDDIJob_submit
        CloudToDDIJob_submit:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - CloudToDDIJob_submitted
        CloudToDDIJob_submitted:
          target: CloudToDDIJob
          activities:
            - set_state: submitted
          on_success:
            - CloudToDDIJob_run
        CloudToDDIJob_run:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - CloudToDDIJob_executed
        CloudToDDIJob_executed:
          target: CloudToDDIJob
          activities:
            - set_state: executed
          on_success:
            - DewetraUpload_start
        DewetraUpload_start:
          target: DewetraUpload
          activities:
            - call_operation: Standard.start
          on_success:
            - DewetraUpload_started
        DewetraUpload_started:
          target: DewetraUpload
          activities:
            - set_state: started
          on_success:
            - MountGEOGDataset_refresh_token_for_stop
        MountGEOGDataset_refresh_token_for_stop:
          target: MountGEOGDataset
          activities:
            - call_operation: custom.refresh_token
          on_success:
            - MountGEOGDataset_stop
        MountGEOGDataset_stop:
          target: MountGEOGDataset
          activities:
            - call_operation: Standard.stop
          on_success:
            - MountGEOGDataset_stopped
        MountGEOGDataset_stopped:
          target: MountGEOGDataset
          activities:
            - set_state: stopped
          on_success:
            - MountWRFDataset_refresh_token_for_stop
        MountWRFDataset_refresh_token_for_stop:
          target: MountWRFDataset
          activities:
            - call_operation: custom.refresh_token
          on_success:
            - MountWRFDataset_stop
        MountWRFDataset_stop:
          target: MountWRFDataset
          activities:
            - call_operation: Standard.stop
          on_success:
            - MountWRFDataset_stopped
        MountWRFDataset_stopped:
          target: MountWRFDataset
          activities:
            - set_state: stopped
          on_success:
            - DeleteCloudGEOGDataJob_create
        DeleteCloudGEOGDataJob_create:
          target: DeleteCloudGEOGDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudGEOGDataJob_created
        DeleteCloudGEOGDataJob_created:
          target: DeleteCloudGEOGDataJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudGEOGDataJob_submit
        DeleteCloudGEOGDataJob_submit:
          target: DeleteCloudGEOGDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudGEOGDataJob_submitted
        DeleteCloudGEOGDataJob_submitted:
          target: DeleteCloudGEOGDataJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudGEOGDataJob_run
        DeleteCloudGEOGDataJob_run:
          target: DeleteCloudGEOGDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudGEOGDataJob_executed
        DeleteCloudGEOGDataJob_executed:
          target: DeleteCloudGEOGDataJob
          activities:
            - set_state: executed
          on_success:
            - DeleteCloudWRFDataJob_create
        DeleteCloudWRFDataJob_create:
          target: DeleteCloudWRFDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudWRFDataJob_created
        DeleteCloudWRFDataJob_created:
          target: DeleteCloudWRFDataJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudWRFDataJob_submit
        DeleteCloudWRFDataJob_submit:
          target: DeleteCloudWRFDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudWRFDataJob_submitted
        DeleteCloudWRFDataJob_submitted:
          target: DeleteCloudWRFDataJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudWRFDataJob_run
        DeleteCloudWRFDataJob_run:
          target: DeleteCloudWRFDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudWRFDataJob_executed
        DeleteCloudWRFDataJob_executed:
          target: DeleteCloudWRFDataJob
          activities:
            - set_state: executed
          on_success:
            - WRF_disable_file_transfer
        WRF_disable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.disable_file_transfer
          on_success:
            - WRF_delete
        WRF_delete:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.delete
          on_success:
            - WRF_deleted
        WRF_deleted:
          target: WRF
          activities:
            - set_state: deleted
          on_success:
            - RefreshVMToken_start
        RefreshVMToken_start:
          target: RefreshVMToken
          activities:
            - call_operation: Standard.start
          on_success:
            - RefreshVMToken_started
        RefreshVMToken_started:
          target: RefreshVMToken
          activities:
            - set_state: started
          on_success:
            - Compute_uninstall
        Compute_uninstall:
          target: RisicoVM
          activities:
            - delegate: uninstall
          on_success:
            - Network_uninstall
        Network_uninstall:
          target: PublicNet
          activities:
            - delegate: uninstall
    RunWithoutCleanup:
      steps:
        # Submit DDI job to get info on dataset (DDI location where it is available, size...)
        InputDatasetInfoJob_submit:
          target: InputDatasetInfoJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - InputDatasetInfoJob_run
        InputDatasetInfoJob_run:
          target: InputDatasetInfoJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - InputDatasetInfoJob_executed
        InputDatasetInfoJob_executed:
          target: InputDatasetInfoJob
          activities:
            - set_state: executed
          on_success:
            - FindCloudLocationJob_submit
        # Submit the computation to find the best location from these inputs
        FindCloudLocationJob_submit:
          target: FindCloudLocationJob
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - FindCloudLocationJob_run
        FindCloudLocationJob_run:
          target: FindCloudLocationJob
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - FindCloudLocationJob_executed
        FindCloudLocationJob_executed:
          target: FindCloudLocationJob
          activities:
            - set_state: executed
          on_success:
            - DDIToCloudGEOGDatasetJob_create
            - Network_install
        # Get a floating IP address for the Cloud Compute instance
        Network_install:
          target: PublicNet
          activities:
            - delegate: install
          on_success:
            - Compute_install
        Compute_install:
          target: RisicoVM
          activities:
            - delegate: install
          on_success:
            - GetDDIAccess_start
            - CreatePreProcessDirs_start
            - Docker_create
        GetDDIAccess_start:
          target: GetDDIAccess
          activities:
            - call_operation: Standard.start
          on_success:
            - GetDDIAccess_started
        GetDDIAccess_started:
          target: GetDDIAccess
          activities:
            - set_state: started
          on_success:
            - MountGEOGDataset_create
        DDIToCloudGEOGDatasetJob_create:
          target: DDIToCloudGEOGDatasetJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DDIToCloudGEOGDatasetJob_submit
        DDIToCloudGEOGDatasetJob_submit:
          target: DDIToCloudGEOGDatasetJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DDIToCloudGEOGDatasetJob_submitted
        DDIToCloudGEOGDatasetJob_submitted:
          target: DDIToCloudGEOGDatasetJob
          activities:
            - set_state: submitted
          on_success:
            - DDIToCloudGEOGDatasetJob_run
        DDIToCloudGEOGDatasetJob_run:
          target: DDIToCloudGEOGDatasetJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DDIToCloudGEOGDatasetJob_executed
        DDIToCloudGEOGDatasetJob_executed:
          target: DDIToCloudGEOGDatasetJob
          activities:
            - set_state: executed
          on_success:
            - MountGEOGDataset_create
        MountGEOGDataset_create:
          target: MountGEOGDataset
          activities:
            - call_operation: Standard.create
          on_success:
            - MountGEOGDataset_created
        MountGEOGDataset_created:
          target: MountGEOGDataset
          activities:
            - set_state: created
          on_success:
            - MountGEOGDataset_refresh_token
        MountGEOGDataset_refresh_token:
          target: MountGEOGDataset
          activities:
            - call_operation: custom.refresh_token
          on_success:
            - MountGEOGDataset_start
        MountGEOGDataset_start:
          target: MountGEOGDataset
          activities:
            - call_operation: Standard.start
          on_success:
            - MountGEOGDataset_started
        MountGEOGDataset_started:
          target: MountGEOGDataset
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_start
        CreatePreProcessDirs_start:
          target: CreatePreProcessDirs
          activities:
            - call_operation: Standard.start
          on_success:
            - CreatePreProcessDirs_started
        CreatePreProcessDirs_started:
          target: CreatePreProcessDirs
          activities:
            - set_state: started
          on_success:
            - GFSData_D_day_start
            - GFSData_day_before_start
            - GFSData_2_days_before_start
        GFSData_D_day_start:
          target: GFSData_D_day
          activities:
            - call_operation: Standard.start
          on_success:
            - GFSData_D_day_started
        GFSData_D_day_started:
          target: GFSData_D_day
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_start
        GFSData_day_before_start:
          target: GFSData_day_before
          activities:
            - call_operation: Standard.start
          on_success:
            - GFSData_day_before_started
        GFSData_day_before_started:
          target: GFSData_day_before
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_start
        GFSData_2_days_before_start:
          target: GFSData_2_days_before
          activities:
            - call_operation: Standard.start
          on_success:
            - GFSData_2_days_before_started
        GFSData_2_days_before_started:
          target: GFSData_2_days_before
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_start
        Docker_create:
          target: Docker
          activities:
            - call_operation: Standard.create
          on_success:
            - Docker_configure
        Docker_configure:
          target: Docker
          activities:
            - call_operation: Standard.configure
          on_success:
            - Docker_start
        Docker_start:
          target: Docker
          activities:
            - call_operation: Standard.start
          on_success:
            - Docker_started
        Docker_started:
          target: Docker
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_create
        WPS_GFS_create:
          target: WPS_GFS
          activities:
            - call_operation: Standard.create
          on_success:
            - WPS_GFS_start
            - ObservationsData_create
        WPS_GFS_start:
          target: WPS_GFS
          activities:
            - call_operation: Standard.start
          on_success:
            - WPS_GFS_started
        WPS_GFS_started:
          target: WPS_GFS
          activities:
            - set_state: started
          on_success:
            - WPS_GFS_delete
        WPS_GFS_delete:
          target: WPS_GFS
          activities:
            - call_operation: Standard.delete
          on_success:
            - WPS_GFS_deleted
        WPS_GFS_deleted:
          target: WPS_GFS
          activities:
            - set_state: deleted
          on_success:
            - GetPreprocessDatasetInfo_create
        ObservationsData_create:
          target: ObservationsData
          activities:
            - call_operation: Standard.create
          on_success:
            - ObservationsData_start
        ObservationsData_start:
          target: ObservationsData
          activities:
            - call_operation: Standard.start
          on_success:
            - ObservationsData_started
        ObservationsData_started:
          target: ObservationsData
          activities:
            - set_state: started
          on_success:
            - ObservationsData_delete
        ObservationsData_delete:
          target: ObservationsData
          activities:
            - call_operation: Standard.delete
          on_success:
            - ObservationsData_deleted
        ObservationsData_deleted:
          target: ObservationsData
          activities:
            - set_state: deleted
          on_success:
            - MoveObservationData_start
        MoveObservationData_start:
          target: MoveObservationData
          activities:
            - call_operation: Standard.start
          on_success:
            - MoveObservationData_started
        MoveObservationData_started:
          target: MoveObservationData
          activities:
            - set_state: started
          on_success:
            - GetPreprocessDatasetInfo_create
        GetPreprocessDatasetInfo_create:
          target: GetPreprocessDatasetInfo
          activities:
            - call_operation: Standard.create
          on_success:
            - GetPreprocessDatasetInfo_start
        GetPreprocessDatasetInfo_start:
          target: GetPreprocessDatasetInfo
          activities:
            - call_operation: Standard.start
          on_success:
            - GetPreprocessDatasetInfo_started
        GetPreprocessDatasetInfo_started:
          target: GetPreprocessDatasetInfo
          activities:
            - set_state: started
          on_success:
            - FindHPCLocationsJob_submit
        FindHPCLocationsJob_submit:
          target: FindHPCLocationsJob
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - FindHPCLocationsJob_run
        FindHPCLocationsJob_run:
          target: FindHPCLocationsJob
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - FindHPCLocationsJob_executed
        FindHPCLocationsJob_executed:
          target: FindHPCLocationsJob
          activities:
            - set_state: executed
          on_success:
            - WRF_create
        WRF_create:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - WRF_enable_file_transfer
        WRF_enable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.enable_file_transfer
          on_success:
            - CreateStagingAreaWRFInputDir_start
        # Create a directory in cloud staging area and copy HPC inputs there
        CreateStagingAreaWRFInputDir_start:
          target: CreateStagingAreaWRFInputDir
          activities:
            - call_operation: Standard.start
          on_success:
            - CreateStagingAreaWRFInputDir_started
        CreateStagingAreaWRFInputDir_started:
          target: CreateStagingAreaWRFInputDir
          activities:
            - set_state: started
          on_success:
            - StageWRFInputs_start
        # Stage HPC inputs to cloud staging area
        StageWRFInputs_start:
          target: StageWRFInputs
          activities:
            - call_operation: Standard.start
          on_success:
            - StageWRFInputs_started
        StageWRFInputs_started:
          target: StageWRFInputs
          activities:
            - set_state: started
          on_success:
            - CloudToHPCTaskJob_create
        # Transfer HPC inputs from Cloud staging area to HPC
        CloudToHPCTaskJob_create:
          target: CloudToHPCTaskJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - CloudToHPCTaskJob_submit
        CloudToHPCTaskJob_submit:
          target: CloudToHPCTaskJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - CloudToHPCTaskJob_submitted
        CloudToHPCTaskJob_submitted:
          target: CloudToHPCTaskJob
          activities:
            - set_state: submitted
          on_success:
            - CloudToHPCTaskJob_run
        CloudToHPCTaskJob_run:
          target: CloudToHPCTaskJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - CloudToHPCTaskJob_executed
        CloudToHPCTaskJob_executed:
          target: CloudToHPCTaskJob
          activities:
            - set_state: executed
          on_success:
            - WRF_submit
        WRF_submit:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - WRF_submitted
        WRF_submitted:
          target: WRF
          activities:
            - set_state: submitted
          on_success:
            - WRF_run
        WRF_run:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - WRF_executed
        WRF_executed:
          target: WRF
          activities:
            - set_state: executed
          on_success:
            - CreatePostProcessDirs_start
        CreatePostProcessDirs_start:
          target: CreatePostProcessDirs
          activities:
            - call_operation: Standard.start
          on_success:
            - CreatePostProcessDirs_started
        CreatePostProcessDirs_started:
          target: CreatePostProcessDirs
          activities:
            - set_state: started
          on_success:
            - HPCToCloudWRFJob_create
            - MoveObservationRISICOData_start
        MoveObservationRISICOData_start:
          target: MoveObservationRISICOData
          activities:
            - call_operation: Standard.start
          on_success:
            - MoveObservationRISICOData_started
        MoveObservationRISICOData_started:
          target: MoveObservationRISICOData
          activities:
            - set_state: started
          on_success:
            - RISICO_create
        # Transfer HPC results from HPC to Cloud staging area
        HPCToCloudWRFJob_create:
          target: HPCToCloudWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - HPCToCloudWRFJob_submit
        HPCToCloudWRFJob_submit:
          target: HPCToCloudWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - HPCToCloudWRFJob_submitted
        HPCToCloudWRFJob_submitted:
          target: HPCToCloudWRFJob
          activities:
            - set_state: submitted
          on_success:
            - HPCToCloudWRFJob_run
        HPCToCloudWRFJob_run:
          target: HPCToCloudWRFJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - HPCToCloudWRFJob_executed
        HPCToCloudWRFJob_executed:
          target: HPCToCloudWRFJob
          activities:
            - set_state: executed
          on_success:
            - MountWRFDataset_refresh_token
        MountWRFDataset_refresh_token:
          target: MountWRFDataset
          activities:
            - call_operation: custom.refresh_token
          on_success:
            - MountWRFDataset_start
        MountWRFDataset_start:
          target: MountWRFDataset
          activities:
            - call_operation: Standard.start
          on_success:
            - MountWRFDataset_started
        MountWRFDataset_started:
          target: MountWRFDataset
          activities:
            - set_state: started
          on_success:
            - MoveWRFAuxhistResults_start
            - HPCToDDIJob_create
        MoveWRFAuxhistResults_start:
          target: MoveWRFAuxhistResults
          activities:
            - call_operation: Standard.start
          on_success:
            - MoveWRFAuxhistResults_started
        MoveWRFAuxhistResults_started:
          target: MoveWRFAuxhistResults
          activities:
            - set_state: started
          on_success:
            - MoveWRFLexisResult_start
        MoveWRFLexisResult_start:
          target: MoveWRFLexisResult
          activities:
            - call_operation: Standard.start
          on_success:
            - MoveWRFLexisResult_started
        MoveWRFLexisResult_started:
          target: MoveWRFLexisResult
          activities:
            - set_state: started
          on_success:
            - RISICO_create
        # Transfer HPC job results to DDI
        HPCToDDIJob_create:
          target: HPCToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - HPCToDDIJob_submit
        HPCToDDIJob_submit:
          target: HPCToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - HPCToDDIJob_submitted
        HPCToDDIJob_submitted:
          target: HPCToDDIJob
          activities:
            - set_state: submitted
          on_success:
            - HPCToDDIJob_run
        HPCToDDIJob_run:
          target: HPCToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - HPCToDDIJob_executed
        HPCToDDIJob_executed:
          target: HPCToDDIJob
          activities:
            - set_state: executed
          on_success:
            - CloudToDDIJob_create
        RISICO_create:
          target: RISICO
          activities:
            - call_operation: Standard.create
          on_success:
            - RISICO_start
        RISICO_start:
          target: RISICO
          activities:
            - call_operation: Standard.start
          on_success:
            - RISICO_started
        RISICO_started:
          target: RISICO
          activities:
            - set_state: started
          on_success:
            - CreateStagingAreaResultDir_start
        CreateStagingAreaResultDir_start:
          target: CreateStagingAreaResultDir
          activities:
            - call_operation: Standard.start
          on_success:
            - CreateStagingAreaResultDir_started
        CreateStagingAreaResultDir_started:
          target: CreateStagingAreaResultDir
          activities:
            - set_state: started
          on_success:
            - StageRISICOResults_start
        StageRISICOResults_start:
          target: StageRISICOResults
          activities:
            - call_operation: Standard.start
          on_success:
            - StageRISICOResults_started
        StageRISICOResults_started:
          target: StageRISICOResults
          activities:
            - set_state: started
          on_success:
            - CloudToDDIJob_create
        CloudToDDIJob_create:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - CloudToDDIJob_submit
        CloudToDDIJob_submit:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - CloudToDDIJob_submitted
        CloudToDDIJob_submitted:
          target: CloudToDDIJob
          activities:
            - set_state: submitted
          on_success:
            - CloudToDDIJob_run
        CloudToDDIJob_run:
          target: CloudToDDIJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - CloudToDDIJob_executed
        CloudToDDIJob_executed:
          target: CloudToDDIJob
          activities:
            - set_state: executed
          on_success:
            - DewetraUpload_start
        DewetraUpload_start:
          target: DewetraUpload
          activities:
            - call_operation: Standard.start
          on_success:
            - DewetraUpload_started
        DewetraUpload_started:
          target: DewetraUpload
          activities:
            - set_state: started      
    testCleanupRun:
      steps:
        MountGEOGDataset_refresh_token_for_stop:
          target: MountGEOGDataset
          activities:
            - call_operation: custom.refresh_token
          on_success:
            - MountGEOGDataset_stop
        MountGEOGDataset_stop:
          target: MountGEOGDataset
          activities:
            - call_operation: Standard.stop
          on_success:
            - MountGEOGDataset_stopped
        MountGEOGDataset_stopped:
          target: MountGEOGDataset
          activities:
            - set_state: stopped
          on_success:
            - MountWRFDataset_refresh_token_for_stop
        MountWRFDataset_refresh_token_for_stop:
          target: MountWRFDataset
          activities:
            - call_operation: custom.refresh_token
          on_success:
            - MountWRFDataset_stop
        MountWRFDataset_stop:
          target: MountWRFDataset
          activities:
            - call_operation: Standard.stop
          on_success:
            - MountWRFDataset_stopped
        MountWRFDataset_stopped:
          target: MountWRFDataset
          activities:
            - set_state: stopped
          on_success:
            - DeleteCloudGEOGDataJob_create
        DeleteCloudGEOGDataJob_create:
          target: DeleteCloudGEOGDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudGEOGDataJob_created
        DeleteCloudGEOGDataJob_created:
          target: DeleteCloudGEOGDataJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudGEOGDataJob_submit
        DeleteCloudGEOGDataJob_submit:
          target: DeleteCloudGEOGDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudGEOGDataJob_submitted
        DeleteCloudGEOGDataJob_submitted:
          target: DeleteCloudGEOGDataJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudGEOGDataJob_run
        DeleteCloudGEOGDataJob_run:
          target: DeleteCloudGEOGDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudGEOGDataJob_executed
        DeleteCloudGEOGDataJob_executed:
          target: DeleteCloudGEOGDataJob
          activities:
            - set_state: executed
          on_success:
            - DeleteCloudWRFDataJob_create
        DeleteCloudWRFDataJob_create:
          target: DeleteCloudWRFDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.create
          on_success:
            - DeleteCloudWRFDataJob_created
        DeleteCloudWRFDataJob_created:
          target: DeleteCloudWRFDataJob
          activities:
            - set_state: created
          on_success:
            - DeleteCloudWRFDataJob_submit
        DeleteCloudWRFDataJob_submit:
          target: DeleteCloudWRFDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - DeleteCloudWRFDataJob_submitted
        DeleteCloudWRFDataJob_submitted:
          target: DeleteCloudWRFDataJob
          activities:
            - set_state: submitted
          on_success:
            - DeleteCloudWRFDataJob_run
        DeleteCloudWRFDataJob_run:
          target: DeleteCloudWRFDataJob
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - DeleteCloudWRFDataJob_executed
        DeleteCloudWRFDataJob_executed:
          target: DeleteCloudWRFDataJob
          activities:
            - set_state: executed
          on_success:
            - WRF_disable_file_transfer
        WRF_disable_file_transfer:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: custom.disable_file_transfer
          on_success:
            - WRF_delete
        WRF_delete:
          target: WRF
          operation_host: ORCHESTRATOR
          activities:
            - call_operation: Standard.delete
          on_success:
            - WRF_deleted
        WRF_deleted:
          target: WRF
          activities:
            - set_state: deleted
          on_success:
            - RefreshVMToken_start
        RefreshVMToken_start:
          target: RefreshVMToken
          activities:
            - call_operation: Standard.start
          on_success:
            - RefreshVMToken_started
        RefreshVMToken_started:
          target: RefreshVMToken
          activities:
            - set_state: started
          on_success:
            - Compute_uninstall
        Compute_uninstall:
          target: RisicoVM
          activities:
            - delegate: uninstall
          on_success:
            - Network_uninstall
        Network_uninstall:
          target: PublicNet
          activities:
            - delegate: uninstall
