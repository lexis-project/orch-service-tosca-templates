tosca_definitions_version: alien_dsl_3_0_0

metadata:
  template_name: org.lexis.common.ComputePITemplate
  template_version: 0.1.0-SNAPSHOT
  template_author: lexis

description: "Compute PI example template"

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - yorc-openstack-types:3.1.0
  - org.lexis.common.dynamic-orchestration-types:1.0.1
  - org.lexis.common.examples.pi:0.0.1-SNAPSHOT

topology_template:
  inputs:
    token:
      type: string
      required: true
      description: "OpenID Connect token"
    project_id:
      type: string
      description: "LEXIS project identifier"
      required: true
    # Prefix preprocessing is used by LEXIS Portal to identify a preprocessing input parameter
    preprocessing_decimalsNumber:
      type: integer
      required: true
      description: "Number of decimals to compute"
  node_templates:
    # Validation of the token provided in input
    # Exchanging this token to have an access and refresh tokens
    # for any component needing it in the workflow
    ValidateExchangeToken:
      type: org.lexis.common.dynamic.orchestration.nodes.ValidateAndExchangeToken
      properties:
        token: {get_input: token}
        project_id: { get_input: project_id }

    # Find the best cloud location depending on the input dataset and needed cloud resources
    FindCloudLocationJob:
      type: org.lexis.common.dynamic.orchestration.nodes.SetLocationsJob
      metadata:
        task: dynamic_orchestration
      properties:
        token: { get_input: token }
        project_id: { get_input: project_id }
      requirements:
        - CloudResourceVM:
            type_requirement: cloud_instance
            node: VirtualMachinePI
            capability: tosca.capabilities.OperatingSystem
            relationship: org.lexis.common.dynamic.orchestration.relationships.CloudResource
    PublicNet:
      type: yorc.nodes.openstack.FloatingIP
    VirtualMachinePI:
      type: tosca.nodes.Compute
      requirements:
        - networkNetworkConnection:
            type_requirement: network
            node: PublicNet
            capability: tosca.capabilities.Connectivity
            relationship: tosca.relationships.Network
      capabilities:
        host:
          properties:
            num_cpus: 1
            disk_size: "10 GB"
            mem_size: "2 GB"
        os:
          properties:
            type: linux
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    ComputePI:
      type: org.lexis.common.examples.pi.ComputePI
      # Metadata used by LEXIS Portal to identify a preprocessing workflow step
      metadata:
        task: preprocessing
      properties:
        decimalsNumber: { get_input: preprocessing_decimalsNumber }
      requirements:
        - hostedOnComputeHost:
            type_requirement: host
            node: VirtualMachinePI
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    # At the end of the workflow, the Cloud instance token should be refreshed
    # before attempting to uninstall the compute instance
    RefreshVMToken:
      type: org.lexis.common.dynamic.orchestration.nodes.RefreshTargetTokens
      requirements:
        - target:
            type_requirement: target
            node: VirtualMachinePI
            capability: tosca.capabilities.Node
            relationship: tosca.relationships.DependsOn
  outputs:
    ComputePI_result:
      value: { get_attribute: [ ComputePI, result ] }
  workflows:
    # At deployment time, validating the input token and exchanging it
    # to get an access/refresh token for the orchestrator
    install:
      steps:
        ValidateExchangeToken_start:
          target: ValidateExchangeToken
          activities:
            - call_operation: Standard.start
          on_success:
            - ValidateExchangeToken_started
        ValidateExchangeToken_started:
          target: ValidateExchangeToken
          activities:
            - set_state: started
    uninstall:
      steps:
        RefreshVMToken_start:
          target: RefreshVMToken
          activities:
            - call_operation: Standard.start
          on_success:
            - RefreshVMToken_started
        RefreshVMToken_started:
          target: RefreshVMToken
          activities:
            - set_state: started
          on_success:
            - Compute_uninstall
        Compute_uninstall:
          target: VirtualMachinePI
          activities:
            - delegate: uninstall
          on_success:
            - Network_uninstall
        Network_uninstall:
          target: PublicNet
          activities:
            - delegate: uninstall
    Run:
      steps:
        # Submit the computation to find the best location from these inputs
        FindCloudLocationJob_submit:
          target: FindCloudLocationJob
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.submit
          on_success:
            - FindCloudLocationJob_run
        FindCloudLocationJob_run:
          target: FindCloudLocationJob
          activities:
            - call_operation: tosca.interfaces.node.lifecycle.Runnable.run
          on_success:
            - FindCloudLocationJob_executed
        FindCloudLocationJob_executed:
          target: FindCloudLocationJob
          activities:
            - set_state: executed
          on_success:
            - Network_install
        # Get a floating IP address for the Cloud Compute instance
        Network_install:
          target: PublicNet
          activities:
            - delegate: install
          on_success:
            - Compute_install
        Compute_install:
          target: VirtualMachinePI
          activities:
            - delegate: install
          on_success:
            - ComputePI_start
        ComputePI_start:
          target: ComputePI
          activities:
            - call_operation: Standard.start
          on_success:
            - ComputePI_started
        ComputePI_started:
          target: ComputePI
          activities:
            - set_state: started
          on_success:
            - VirtualMachinePI_uninstall
        VirtualMachinePI_uninstall:
          target: VirtualMachinePI
          activities:
            - delegate: uninstall
          on_success:
            - Network_uninstall
        Network_uninstall:
          target: PublicNet
          activities:
            - delegate: uninstall
